#!/bin/bash

# Pattern for satellite name
NAME_RE="^([-0-9A-Z. +()]{1,24})"

# Patterns for each field in line 1
SAT_NUM1_RE="(\d{1,5})"
CLASS_RE="([A-Z0-9]{1})"
INTL_DES1_RE="(\d{2})"
INTL_DES2_RE="(\d{3})"
INTL_DES3_RE="([A-Z0-9\s]{3})"
EPOCH_YEAR_RE="(\d{2})"
EPOCH_DAY_RE="(\d{3}\.[A-Z0-9\s]{8})"
DX_MEAN_MOTION_RE="([-+ ]\.[\d\s]{8})"
D2X_MEAN_MOTION_RE="([-+ ][\d]{5}[-+]\d{1})"
BSTAR_RE="([-+ ][\d]{5}[-+]\d{1})"
EPHEM_TYPE_RE="(\d)"
ELEMENT_RE="([\d\s]{4})"
CHECKSUM1_RE="(\d)"

# Patterns for each field in line 2
SAT_NUM2_RE="(\d{1,5})"
INC_RE="([\d\s]{3}\.[\d\s]{4})"
RAAN_RE="([\d\s]{3}\.[\d\s]{4})"
ECC_RE="([\d\s]{7})"
ARG_OF_PERIGEE_RE="([\d\s]{3}\.[\d\s]{4})"
MEAN_ANOMALY_RE="([\d\s]{3}\.[\d\s]{4})"
MEAN_MOTION_RE="([\d\s]{2}\.\d{8})"
REVS_NUM_RE="([\s\d]{5})"
CHECKSUM2_RE="(\d)"

# Construct patterns for each line from fields
LINE1_RE="1 $SAT_NUM1_RE$CLASS_RE $INTL_DES1_RE$INTL_DES2_RE$INTL_DES3_RE $EPOCH_YEAR_RE$EPOCH_DAY_RE $DX_MEAN_MOTION_RE $D2X_MEAN_MOTION_RE $BSTAR_RE $EPHEM_TYPE_RE $ELEMENT_RE$CHECKSUM1_RE"
LINE2_RE="2 $SAT_NUM2_RE $INC_RE $RAAN_RE $ECC_RE $ARG_OF_PERIGEE_RE $MEAN_ANOMALY_RE $MEAN_MOTION_RE$REVS_NUM_RE$CHECKSUM2_RE"

# Construct pattern for whole record from lines
TLE_RE="$NAME_RE;$LINE1_RE;$LINE2_RE"

# tput color code
RED=1

inputFilePath=$1

# TLE data comes from STDIN (via a pipe)
if [[ $1 == "" ]]; then
    rawInput=$(cat)
# ...or TLE data comes from a given file
else
    rawInput=$(cat "$inputFilePath")
fi

# For easier processing, put each record on one line
tleRecords=$(echo "$rawInput" | tr "\n" "%" | sed "s/%1/;1/g" | sed "s/%2/;2/g" | sed "s/%/\n/g")

# Go through each record and parse each data point
while IFS= read -r line; do
    # Use perl to parse each match group and sed to remove unneeded whitespace
    tleRecord=$(perl -e "print \"\$_,\" for \"$line\" =~ /$TLE_RE/g")

    # Ignore this record if it can't be parsed
    if [[ $tleRecord == "" ]]; then
        echo "$(tput setaf $RED)Could not parse record: '$line'$(tput sgr0)" >&2
        continue
    fi

    # Split up data and name since different amounts of whitespace need to be removed from both
    dataColumns=$(echo "$tleRecord" | cut -d, -f2- | sed -r "s/\s+//g" | sed -r "s/,$//g")
    nameColumn=$(echo "$tleRecord" | cut -d, -f1 | sed -r "s/\s{2,}/ /g" | sed -r "s/\s+$//g")

    echo "$nameColumn,$dataColumns"
done <<< $tleRecords
